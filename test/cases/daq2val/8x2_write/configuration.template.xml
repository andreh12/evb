<xc:Partition xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:xc="http://xdaq.web.cern.ch/xdaq/xsd/2004/XMLConfiguration-30" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

  <i2o:protocol xmlns:i2o="http://xdaq.web.cern.ch/xdaq/xsd/2004/I2OConfiguration-30">
    <i2o:target class="evb::EVM" instance="0" tid="1"/>
    <i2o:target class="evb::RU" instance="0" tid="10"/>
    <i2o:target class="evb::RU" instance="1" tid="11"/>
    <i2o:target class="evb::RU" instance="2" tid="12"/>
    <i2o:target class="evb::RU" instance="3" tid="13"/>
    <i2o:target class="evb::RU" instance="4" tid="14"/>
    <i2o:target class="evb::RU" instance="5" tid="15"/>
    <i2o:target class="evb::RU" instance="6" tid="16"/>
    <i2o:target class="evb::BU" instance="0" tid="30"/>
    <i2o:target class="evb::BU" instance="1" tid="31"/>
  </i2o:protocol>

  <xc:Context url="http://RU0_SOAP_HOST_NAME:RU0_SOAP_PORT">

    <pol:policy xmlns:pol="http://xdaq.web.cern.ch/xdaq/xsd/2013/XDAQPolicy-10">
      <pol:element pattern="urn:toolbox-task-workloop:udapl-i2o(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-cno(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1"  />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-connector(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-acceptor(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-receiver/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="12" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-sender/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="10" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_0/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="25" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_1/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="9" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_2/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="13" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_3/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="29" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/assignEvents/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Generator(.+)/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/monitoring/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="0" />
      <pol:element pattern="urn:toolbox-mem-allocator:CommittedHeapAllocator" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="toolbox-mem-allocator-udapl-sender-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="toolbox-mem-allocator-udapl-receiver-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="1" />
      <pol:element pattern="urn:allocateFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:fragmentFIFO_FED(.+)" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:fragmentRequestFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:superFragmentFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:squeue:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
    </pol:policy>

    <xc:Endpoint protocol="udapl" service="i2o" hostname="RU0_I2O_HOST_NAME" port="RU0_I2O_PORT" network="infini" />

    <xc:Application class="pt::udapl::Application" id="10" network="local">
      <properties xmlns="urn:xdaq-application:pt::udapl::Application" xsi:type="soapenc:Struct">
        <iaName xsi:type="xsd:string">ofa-v2-ib0</iaName>
        <senderPoolSize xsi:type="xsd:unsignedInt">0x1F400000</senderPoolSize>
        <receiverPoolSize xsi:type="xsd:unsignedInt">0x40000000</receiverPoolSize>
      </properties>
    </xc:Application>

    <xc:Application class="evb::EVM" id="12" instance="0" network="infini">
      <properties xmlns="urn:xdaq-application:evb::EVM" xsi:type="soapenc:Struct">
        <inputSource xsi:type="xsd:string">Local</inputSource>
        <fragmentFIFOCapacity xsi:type="xsd:unsignedInt">32</fragmentFIFOCapacity>
        <fragmentPoolSize xsi:type="xsd:unsignedInt">0x1F400000</fragmentPoolSize>
        <fakeLumiSectionDuration xsi:type="xsd:unsignedInt">23</fakeLumiSectionDuration>
        <fedSourceIds soapenc:arrayType="xsd:ur-type[16]" xsi:type="soapenc:Array">
          <item soapenc:position="[0]" xsi:type="xsd:unsignedInt">0</item>
          <item soapenc:position="[1]" xsi:type="xsd:unsignedInt">1</item>
          <item soapenc:position="[2]" xsi:type="xsd:unsignedInt">2</item>
          <item soapenc:position="[3]" xsi:type="xsd:unsignedInt">3</item>
          <item soapenc:position="[4]" xsi:type="xsd:unsignedInt">4</item>
          <item soapenc:position="[5]" xsi:type="xsd:unsignedInt">5</item>
          <item soapenc:position="[6]" xsi:type="xsd:unsignedInt">6</item>
          <item soapenc:position="[7]" xsi:type="xsd:unsignedInt">7</item>
          <item soapenc:position="[8]" xsi:type="xsd:unsignedInt">8</item>
          <item soapenc:position="[9]" xsi:type="xsd:unsignedInt">9</item>
          <item soapenc:position="[10]" xsi:type="xsd:unsignedInt">10</item>
          <item soapenc:position="[11]" xsi:type="xsd:unsignedInt">11</item>
          <item soapenc:position="[12]" xsi:type="xsd:unsignedInt">12</item>
          <item soapenc:position="[13]" xsi:type="xsd:unsignedInt">13</item>
          <item soapenc:position="[14]" xsi:type="xsd:unsignedInt">14</item>
          <item soapenc:position="[15]" xsi:type="xsd:unsignedInt">15</item>
        </fedSourceIds>
      </properties>
    </xc:Application>

    <xc:Application class="xmem::probe::Application" id="21" instance="0" network="local"/>

    <xc:Module>/usr/lib64/libdat2.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxmemprobe.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libtcpla.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptudapl.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptutcp.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxdaq2rc.so</xc:Module>
    <xc:Module>$XDAQ_LOCAL/lib/libevb.so</xc:Module>

  </xc:Context>


  <xc:Context url="http://RU1_SOAP_HOST_NAME:RU1_SOAP_PORT">

    <pol:policy xmlns:pol="http://xdaq.web.cern.ch/xdaq/xsd/2013/XDAQPolicy-10">
      <pol:element pattern="urn:toolbox-task-workloop:udapl-i2o(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-cno(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1"  />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-connector(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-acceptor(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-receiver/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="12" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-sender/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="10" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_0/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="25" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_1/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="9" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_2/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="13" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_3/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="29" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/assignEvents/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Generator(.+)/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/monitoring/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="0" />
      <pol:element pattern="urn:toolbox-mem-allocator:CommittedHeapAllocator" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="toolbox-mem-allocator-udapl-sender-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="toolbox-mem-allocator-udapl-receiver-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="1" />
      <pol:element pattern="urn:allocateFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:fragmentFIFO_FED(.+)" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:fragmentRequestFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:superFragmentFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:squeue:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
    </pol:policy>

    <xc:Endpoint protocol="udapl" service="i2o" hostname="RU1_I2O_HOST_NAME" port="RU1_I2O_PORT" network="infini" />

    <xc:Application class="pt::udapl::Application" id="10" network="local">
      <properties xmlns="urn:xdaq-application:pt::udapl::Application" xsi:type="soapenc:Struct">
        <iaName xsi:type="xsd:string">ofa-v2-ib0</iaName>
        <senderPoolSize xsi:type="xsd:unsignedInt">0x1F400000</senderPoolSize>
        <receiverPoolSize xsi:type="xsd:unsignedInt">0x40000000</receiverPoolSize>
      </properties>
    </xc:Application>

    <xc:Application class="evb::RU" id="12" instance="0" network="infini">
      <properties xmlns="urn:xdaq-application:evb::RU" xsi:type="soapenc:Struct">
        <inputSource xsi:type="xsd:string">Local</inputSource>
        <fragmentFIFOCapacity xsi:type="xsd:unsignedInt">32</fragmentFIFOCapacity>
        <fragmentPoolSize xsi:type="xsd:unsignedInt">0x1F400000</fragmentPoolSize>
        <fedSourceIds soapenc:arrayType="xsd:ur-type[16]" xsi:type="soapenc:Array">
          <item soapenc:position="[0]" xsi:type="xsd:unsignedInt">16</item>
          <item soapenc:position="[1]" xsi:type="xsd:unsignedInt">17</item>
          <item soapenc:position="[2]" xsi:type="xsd:unsignedInt">18</item>
          <item soapenc:position="[3]" xsi:type="xsd:unsignedInt">19</item>
          <item soapenc:position="[4]" xsi:type="xsd:unsignedInt">20</item>
          <item soapenc:position="[5]" xsi:type="xsd:unsignedInt">21</item>
          <item soapenc:position="[6]" xsi:type="xsd:unsignedInt">22</item>
          <item soapenc:position="[7]" xsi:type="xsd:unsignedInt">23</item>
          <item soapenc:position="[8]" xsi:type="xsd:unsignedInt">24</item>
          <item soapenc:position="[9]" xsi:type="xsd:unsignedInt">25</item>
          <item soapenc:position="[10]" xsi:type="xsd:unsignedInt">26</item>
          <item soapenc:position="[11]" xsi:type="xsd:unsignedInt">27</item>
          <item soapenc:position="[12]" xsi:type="xsd:unsignedInt">28</item>
          <item soapenc:position="[13]" xsi:type="xsd:unsignedInt">29</item>
          <item soapenc:position="[14]" xsi:type="xsd:unsignedInt">30</item>
          <item soapenc:position="[15]" xsi:type="xsd:unsignedInt">31</item>
        </fedSourceIds>
      </properties>
    </xc:Application>

    <xc:Application class="xmem::probe::Application" id="21" instance="1" network="local"/>

    <xc:Module>/usr/lib64/libdat2.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxmemprobe.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libtcpla.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptudapl.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptutcp.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxdaq2rc.so</xc:Module>
    <xc:Module>$XDAQ_LOCAL/lib/libevb.so</xc:Module>

  </xc:Context>


  <xc:Context url="http://RU2_SOAP_HOST_NAME:RU2_SOAP_PORT">

    <pol:policy xmlns:pol="http://xdaq.web.cern.ch/xdaq/xsd/2013/XDAQPolicy-10">
      <pol:element pattern="urn:toolbox-task-workloop:udapl-i2o(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-cno(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1"  />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-connector(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-acceptor(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-receiver/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="12" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-sender/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="10" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_0/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="25" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_1/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="9" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_2/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="13" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_3/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="29" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/assignEvents/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Generator(.+)/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/monitoring/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="0" />
      <pol:element pattern="urn:toolbox-mem-allocator:CommittedHeapAllocator" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="toolbox-mem-allocator-udapl-sender-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="toolbox-mem-allocator-udapl-receiver-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="1" />
      <pol:element pattern="urn:allocateFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:fragmentFIFO_FED(.+)" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:fragmentRequestFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:superFragmentFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:squeue:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
    </pol:policy>

    <xc:Endpoint protocol="udapl" service="i2o" hostname="RU2_I2O_HOST_NAME" port="RU2_I2O_PORT" network="infini" />

    <xc:Application class="pt::udapl::Application" id="10" network="local">
      <properties xmlns="urn:xdaq-application:pt::udapl::Application" xsi:type="soapenc:Struct">
        <iaName xsi:type="xsd:string">ofa-v2-ib0</iaName>
        <senderPoolSize xsi:type="xsd:unsignedInt">0x1F400000</senderPoolSize>
        <receiverPoolSize xsi:type="xsd:unsignedInt">0x40000000</receiverPoolSize>
      </properties>
    </xc:Application>

    <xc:Application class="evb::RU" id="12" instance="1" network="infini">
      <properties xmlns="urn:xdaq-application:evb::RU" xsi:type="soapenc:Struct">
        <inputSource xsi:type="xsd:string">Local</inputSource>
        <fragmentFIFOCapacity xsi:type="xsd:unsignedInt">32</fragmentFIFOCapacity>
        <fragmentPoolSize xsi:type="xsd:unsignedInt">0x1F400000</fragmentPoolSize>
        <fedSourceIds soapenc:arrayType="xsd:ur-type[16]" xsi:type="soapenc:Array">
          <item soapenc:position="[0]" xsi:type="xsd:unsignedInt">32</item>
          <item soapenc:position="[1]" xsi:type="xsd:unsignedInt">33</item>
          <item soapenc:position="[2]" xsi:type="xsd:unsignedInt">34</item>
          <item soapenc:position="[3]" xsi:type="xsd:unsignedInt">35</item>
          <item soapenc:position="[4]" xsi:type="xsd:unsignedInt">36</item>
          <item soapenc:position="[5]" xsi:type="xsd:unsignedInt">37</item>
          <item soapenc:position="[6]" xsi:type="xsd:unsignedInt">38</item>
          <item soapenc:position="[7]" xsi:type="xsd:unsignedInt">39</item>
          <item soapenc:position="[8]" xsi:type="xsd:unsignedInt">40</item>
          <item soapenc:position="[9]" xsi:type="xsd:unsignedInt">41</item>
          <item soapenc:position="[10]" xsi:type="xsd:unsignedInt">42</item>
          <item soapenc:position="[11]" xsi:type="xsd:unsignedInt">43</item>
          <item soapenc:position="[12]" xsi:type="xsd:unsignedInt">44</item>
          <item soapenc:position="[13]" xsi:type="xsd:unsignedInt">45</item>
          <item soapenc:position="[14]" xsi:type="xsd:unsignedInt">46</item>
          <item soapenc:position="[15]" xsi:type="xsd:unsignedInt">47</item>
        </fedSourceIds>
      </properties>
    </xc:Application>

    <xc:Application class="xmem::probe::Application" id="21" instance="2" network="local"/>

    <xc:Module>/usr/lib64/libdat2.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxmemprobe.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libtcpla.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptudapl.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptutcp.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxdaq2rc.so</xc:Module>
    <xc:Module>$XDAQ_LOCAL/lib/libevb.so</xc:Module>

  </xc:Context>


  <xc:Context url="http://RU3_SOAP_HOST_NAME:RU3_SOAP_PORT">

    <pol:policy xmlns:pol="http://xdaq.web.cern.ch/xdaq/xsd/2013/XDAQPolicy-10">
      <pol:element pattern="urn:toolbox-task-workloop:udapl-i2o(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-cno(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1"  />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-connector(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-acceptor(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-receiver/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="12" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-sender/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="10" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_0/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="25" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_1/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="9" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_2/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="13" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_3/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="29" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/assignEvents/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Generator(.+)/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/monitoring/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="0" />
      <pol:element pattern="urn:toolbox-mem-allocator:CommittedHeapAllocator" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="toolbox-mem-allocator-udapl-sender-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="toolbox-mem-allocator-udapl-receiver-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="1" />
      <pol:element pattern="urn:allocateFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:fragmentFIFO_FED(.+)" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:fragmentRequestFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:superFragmentFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:squeue:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
    </pol:policy>

    <xc:Endpoint protocol="udapl" service="i2o" hostname="RU3_I2O_HOST_NAME" port="RU3_I2O_PORT" network="infini" />

    <xc:Application class="pt::udapl::Application" id="10" network="local">
      <properties xmlns="urn:xdaq-application:pt::udapl::Application" xsi:type="soapenc:Struct">
        <iaName xsi:type="xsd:string">ofa-v2-ib0</iaName>
        <senderPoolSize xsi:type="xsd:unsignedInt">0x1F400000</senderPoolSize>
        <receiverPoolSize xsi:type="xsd:unsignedInt">0x40000000</receiverPoolSize>
      </properties>
    </xc:Application>

    <xc:Application class="evb::RU" id="13" instance="2" network="infini">
      <properties xmlns="urn:xdaq-application:evb::RU" xsi:type="soapenc:Struct">
        <inputSource xsi:type="xsd:string">Local</inputSource>
        <fragmentFIFOCapacity xsi:type="xsd:unsignedInt">32</fragmentFIFOCapacity>
        <fragmentPoolSize xsi:type="xsd:unsignedInt">0x1F400000</fragmentPoolSize>
        <fedSourceIds soapenc:arrayType="xsd:ur-type[16]" xsi:type="soapenc:Array">
          <item soapenc:position="[0]" xsi:type="xsd:unsignedInt">48</item>
          <item soapenc:position="[1]" xsi:type="xsd:unsignedInt">49</item>
          <item soapenc:position="[2]" xsi:type="xsd:unsignedInt">50</item>
          <item soapenc:position="[3]" xsi:type="xsd:unsignedInt">51</item>
          <item soapenc:position="[4]" xsi:type="xsd:unsignedInt">52</item>
          <item soapenc:position="[5]" xsi:type="xsd:unsignedInt">53</item>
          <item soapenc:position="[6]" xsi:type="xsd:unsignedInt">54</item>
          <item soapenc:position="[7]" xsi:type="xsd:unsignedInt">55</item>
          <item soapenc:position="[8]" xsi:type="xsd:unsignedInt">56</item>
          <item soapenc:position="[9]" xsi:type="xsd:unsignedInt">57</item>
          <item soapenc:position="[10]" xsi:type="xsd:unsignedInt">58</item>
          <item soapenc:position="[11]" xsi:type="xsd:unsignedInt">59</item>
          <item soapenc:position="[12]" xsi:type="xsd:unsignedInt">60</item>
          <item soapenc:position="[13]" xsi:type="xsd:unsignedInt">61</item>
          <item soapenc:position="[14]" xsi:type="xsd:unsignedInt">62</item>
          <item soapenc:position="[15]" xsi:type="xsd:unsignedInt">63</item>
        </fedSourceIds>
      </properties>
    </xc:Application>

    <xc:Application class="xmem::probe::Application" id="21" instance="3" network="local"/>

    <xc:Module>/usr/lib64/libdat2.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxmemprobe.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libtcpla.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptudapl.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptutcp.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxdaq2rc.so</xc:Module>
    <xc:Module>$XDAQ_LOCAL/lib/libevb.so</xc:Module>

  </xc:Context>


  <xc:Context url="http://RU4_SOAP_HOST_NAME:RU4_SOAP_PORT">

    <pol:policy xmlns:pol="http://xdaq.web.cern.ch/xdaq/xsd/2013/XDAQPolicy-10">
      <pol:element pattern="urn:toolbox-task-workloop:udapl-i2o(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-cno(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1"  />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-connector(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-acceptor(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-receiver/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="12" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-sender/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="10" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_0/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="25" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_1/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="9" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_2/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="13" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_3/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="29" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/assignEvents/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Generator(.+)/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/monitoring/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="0" />
      <pol:element pattern="urn:toolbox-mem-allocator:CommittedHeapAllocator" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="toolbox-mem-allocator-udapl-sender-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="toolbox-mem-allocator-udapl-receiver-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="1" />
      <pol:element pattern="urn:allocateFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:fragmentFIFO_FED(.+)" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:fragmentRequestFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:superFragmentFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:squeue:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
    </pol:policy>

    <xc:Endpoint protocol="udapl" service="i2o" hostname="RU4_I2O_HOST_NAME" port="RU4_I2O_PORT" network="infini" />

    <xc:Application class="pt::udapl::Application" id="10" network="local">
      <properties xmlns="urn:xdaq-application:pt::udapl::Application" xsi:type="soapenc:Struct">
        <iaName xsi:type="xsd:string">ofa-v2-ib0</iaName>
        <senderPoolSize xsi:type="xsd:unsignedInt">0x1F400000</senderPoolSize>
        <receiverPoolSize xsi:type="xsd:unsignedInt">0x40000000</receiverPoolSize>
      </properties>
    </xc:Application>

    <xc:Application class="evb::RU" id="13" instance="3" network="infini">
      <properties xmlns="urn:xdaq-application:evb::RU" xsi:type="soapenc:Struct">
        <inputSource xsi:type="xsd:string">Local</inputSource>
        <fragmentFIFOCapacity xsi:type="xsd:unsignedInt">32</fragmentFIFOCapacity>
        <fragmentPoolSize xsi:type="xsd:unsignedInt">0x1F400000</fragmentPoolSize>
        <fedSourceIds soapenc:arrayType="xsd:ur-type[16]" xsi:type="soapenc:Array">
          <item soapenc:position="[0]" xsi:type="xsd:unsignedInt">64</item>
          <item soapenc:position="[1]" xsi:type="xsd:unsignedInt">65</item>
          <item soapenc:position="[2]" xsi:type="xsd:unsignedInt">66</item>
          <item soapenc:position="[3]" xsi:type="xsd:unsignedInt">67</item>
          <item soapenc:position="[4]" xsi:type="xsd:unsignedInt">68</item>
          <item soapenc:position="[5]" xsi:type="xsd:unsignedInt">69</item>
          <item soapenc:position="[6]" xsi:type="xsd:unsignedInt">70</item>
          <item soapenc:position="[7]" xsi:type="xsd:unsignedInt">71</item>
          <item soapenc:position="[8]" xsi:type="xsd:unsignedInt">72</item>
          <item soapenc:position="[9]" xsi:type="xsd:unsignedInt">73</item>
          <item soapenc:position="[10]" xsi:type="xsd:unsignedInt">74</item>
          <item soapenc:position="[11]" xsi:type="xsd:unsignedInt">75</item>
          <item soapenc:position="[12]" xsi:type="xsd:unsignedInt">76</item>
          <item soapenc:position="[13]" xsi:type="xsd:unsignedInt">77</item>
          <item soapenc:position="[14]" xsi:type="xsd:unsignedInt">78</item>
          <item soapenc:position="[15]" xsi:type="xsd:unsignedInt">79</item>
        </fedSourceIds>
      </properties>
    </xc:Application>

    <xc:Application class="xmem::probe::Application" id="21" instance="4" network="local"/>

    <xc:Module>/usr/lib64/libdat2.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxmemprobe.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libtcpla.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptudapl.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptutcp.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxdaq2rc.so</xc:Module>
    <xc:Module>$XDAQ_LOCAL/lib/libevb.so</xc:Module>

  </xc:Context>


  <xc:Context url="http://RU5_SOAP_HOST_NAME:RU5_SOAP_PORT">

    <pol:policy xmlns:pol="http://xdaq.web.cern.ch/xdaq/xsd/2013/XDAQPolicy-10">
      <pol:element pattern="urn:toolbox-task-workloop:udapl-i2o(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-cno(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1"  />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-connector(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-acceptor(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-receiver/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="12" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-sender/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="10" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_0/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="25" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_1/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="9" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_2/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="13" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_3/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="29" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/assignEvents/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Generator(.+)/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/monitoring/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="0" />
      <pol:element pattern="urn:toolbox-mem-allocator:CommittedHeapAllocator" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="toolbox-mem-allocator-udapl-sender-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="toolbox-mem-allocator-udapl-receiver-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="1" />
      <pol:element pattern="urn:allocateFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:fragmentFIFO_FED(.+)" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:fragmentRequestFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:superFragmentFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:squeue:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
    </pol:policy>

    <xc:Endpoint protocol="udapl" service="i2o" hostname="RU5_I2O_HOST_NAME" port="RU5_I2O_PORT" network="infini" />

    <xc:Application class="pt::udapl::Application" id="10" network="local">
      <properties xmlns="urn:xdaq-application:pt::udapl::Application" xsi:type="soapenc:Struct">
        <iaName xsi:type="xsd:string">ofa-v2-ib0</iaName>
        <senderPoolSize xsi:type="xsd:unsignedInt">0x1F400000</senderPoolSize>
        <receiverPoolSize xsi:type="xsd:unsignedInt">0x40000000</receiverPoolSize>
      </properties>
    </xc:Application>

    <xc:Application class="evb::RU" id="13" instance="4" network="infini">
      <properties xmlns="urn:xdaq-application:evb::RU" xsi:type="soapenc:Struct">
        <inputSource xsi:type="xsd:string">Local</inputSource>
        <fragmentFIFOCapacity xsi:type="xsd:unsignedInt">32</fragmentFIFOCapacity>
        <fragmentPoolSize xsi:type="xsd:unsignedInt">0x1F400000</fragmentPoolSize>
        <fedSourceIds soapenc:arrayType="xsd:ur-type[16]" xsi:type="soapenc:Array">
          <item soapenc:position="[0]" xsi:type="xsd:unsignedInt">80</item>
          <item soapenc:position="[1]" xsi:type="xsd:unsignedInt">81</item>
          <item soapenc:position="[2]" xsi:type="xsd:unsignedInt">82</item>
          <item soapenc:position="[3]" xsi:type="xsd:unsignedInt">83</item>
          <item soapenc:position="[4]" xsi:type="xsd:unsignedInt">84</item>
          <item soapenc:position="[5]" xsi:type="xsd:unsignedInt">85</item>
          <item soapenc:position="[6]" xsi:type="xsd:unsignedInt">86</item>
          <item soapenc:position="[7]" xsi:type="xsd:unsignedInt">87</item>
          <item soapenc:position="[8]" xsi:type="xsd:unsignedInt">88</item>
          <item soapenc:position="[9]" xsi:type="xsd:unsignedInt">89</item>
          <item soapenc:position="[10]" xsi:type="xsd:unsignedInt">90</item>
          <item soapenc:position="[11]" xsi:type="xsd:unsignedInt">91</item>
          <item soapenc:position="[12]" xsi:type="xsd:unsignedInt">92</item>
          <item soapenc:position="[13]" xsi:type="xsd:unsignedInt">93</item>
          <item soapenc:position="[14]" xsi:type="xsd:unsignedInt">94</item>
          <item soapenc:position="[15]" xsi:type="xsd:unsignedInt">95</item>
        </fedSourceIds>
      </properties>
    </xc:Application>

    <xc:Application class="xmem::probe::Application" id="21" instance="5" network="local"/>

    <xc:Module>/usr/lib64/libdat2.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxmemprobe.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libtcpla.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptudapl.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptutcp.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxdaq2rc.so</xc:Module>
    <xc:Module>$XDAQ_LOCAL/lib/libevb.so</xc:Module>

  </xc:Context>


  <xc:Context url="http://RU6_SOAP_HOST_NAME:RU6_SOAP_PORT">

    <pol:policy xmlns:pol="http://xdaq.web.cern.ch/xdaq/xsd/2013/XDAQPolicy-10">
      <pol:element pattern="urn:toolbox-task-workloop:udapl-i2o(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-cno(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1"  />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-connector(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-acceptor(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-receiver/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="12" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-sender/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="10" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_0/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="25" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_1/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="9" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_2/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="13" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_3/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="29" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/assignEvents/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Generator(.+)/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/monitoring/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="0" />
      <pol:element pattern="urn:toolbox-mem-allocator:CommittedHeapAllocator" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="toolbox-mem-allocator-udapl-sender-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="toolbox-mem-allocator-udapl-receiver-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="1" />
      <pol:element pattern="urn:allocateFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:fragmentFIFO_FED(.+)" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:fragmentRequestFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:superFragmentFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:squeue:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
    </pol:policy>

    <xc:Endpoint protocol="udapl" service="i2o" hostname="RU6_I2O_HOST_NAME" port="RU6_I2O_PORT" network="infini" />

    <xc:Application class="pt::udapl::Application" id="10" network="local">
      <properties xmlns="urn:xdaq-application:pt::udapl::Application" xsi:type="soapenc:Struct">
        <iaName xsi:type="xsd:string">ofa-v2-ib0</iaName>
        <senderPoolSize xsi:type="xsd:unsignedInt">0x1F400000</senderPoolSize>
        <receiverPoolSize xsi:type="xsd:unsignedInt">0x40000000</receiverPoolSize>
      </properties>
    </xc:Application>

    <xc:Application class="evb::RU" id="13" instance="5" network="infini">
      <properties xmlns="urn:xdaq-application:evb::RU" xsi:type="soapenc:Struct">
        <inputSource xsi:type="xsd:string">Local</inputSource>
        <fragmentFIFOCapacity xsi:type="xsd:unsignedInt">32</fragmentFIFOCapacity>
        <fragmentPoolSize xsi:type="xsd:unsignedInt">0x1F400000</fragmentPoolSize>
        <fedSourceIds soapenc:arrayType="xsd:ur-type[16]" xsi:type="soapenc:Array">
          <item soapenc:position="[0]" xsi:type="xsd:unsignedInt">96</item>
          <item soapenc:position="[1]" xsi:type="xsd:unsignedInt">97</item>
          <item soapenc:position="[2]" xsi:type="xsd:unsignedInt">98</item>
          <item soapenc:position="[3]" xsi:type="xsd:unsignedInt">99</item>
          <item soapenc:position="[4]" xsi:type="xsd:unsignedInt">100</item>
          <item soapenc:position="[5]" xsi:type="xsd:unsignedInt">101</item>
          <item soapenc:position="[6]" xsi:type="xsd:unsignedInt">102</item>
          <item soapenc:position="[7]" xsi:type="xsd:unsignedInt">103</item>
          <item soapenc:position="[8]" xsi:type="xsd:unsignedInt">104</item>
          <item soapenc:position="[9]" xsi:type="xsd:unsignedInt">105</item>
          <item soapenc:position="[10]" xsi:type="xsd:unsignedInt">106</item>
          <item soapenc:position="[11]" xsi:type="xsd:unsignedInt">107</item>
          <item soapenc:position="[12]" xsi:type="xsd:unsignedInt">108</item>
          <item soapenc:position="[13]" xsi:type="xsd:unsignedInt">109</item>
          <item soapenc:position="[14]" xsi:type="xsd:unsignedInt">110</item>
          <item soapenc:position="[15]" xsi:type="xsd:unsignedInt">111</item>
        </fedSourceIds>
      </properties>
    </xc:Application>

    <xc:Application class="xmem::probe::Application" id="21" instance="6" network="local"/>

    <xc:Module>/usr/lib64/libdat2.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxmemprobe.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libtcpla.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptudapl.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptutcp.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxdaq2rc.so</xc:Module>
    <xc:Module>$XDAQ_LOCAL/lib/libevb.so</xc:Module>

  </xc:Context>


  <xc:Context url="http://RU7_SOAP_HOST_NAME:RU7_SOAP_PORT">

    <pol:policy xmlns:pol="http://xdaq.web.cern.ch/xdaq/xsd/2013/XDAQPolicy-10">
      <pol:element pattern="urn:toolbox-task-workloop:udapl-i2o(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-cno(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1"  />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-connector(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-acceptor(.+)" type="thread" package="numa" mempolicy="onnode" memnode="1" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-receiver/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="12" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-sender/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="10" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_0/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="25" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_1/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="9" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_2/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="13" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Responder_3/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="29" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/assignEvents/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Generator(.+)/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/monitoring/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="0" />
      <pol:element pattern="urn:toolbox-mem-allocator:CommittedHeapAllocator" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="toolbox-mem-allocator-udapl-sender-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="toolbox-mem-allocator-udapl-receiver-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="1" />
      <pol:element pattern="urn:allocateFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:fragmentFIFO_FED(.+)" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:fragmentRequestFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:superFragmentFIFO:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:squeue:alloc" type="alloc" package="numa" mempolicy="onnode" node="0" />
    </pol:policy>

    <xc:Endpoint protocol="udapl" service="i2o" hostname="RU7_I2O_HOST_NAME" port="RU7_I2O_PORT" network="infini" />

    <xc:Application class="pt::udapl::Application" id="10" network="local">
      <properties xmlns="urn:xdaq-application:pt::udapl::Application" xsi:type="soapenc:Struct">
        <iaName xsi:type="xsd:string">ofa-v2-ib0</iaName>
        <senderPoolSize xsi:type="xsd:unsignedInt">0x1F400000</senderPoolSize>
        <receiverPoolSize xsi:type="xsd:unsignedInt">0x40000000</receiverPoolSize>
      </properties>
    </xc:Application>

    <xc:Application class="evb::RU" id="13" instance="6" network="infini">
      <properties xmlns="urn:xdaq-application:evb::RU" xsi:type="soapenc:Struct">
        <inputSource xsi:type="xsd:string">Local</inputSource>
        <fragmentFIFOCapacity xsi:type="xsd:unsignedInt">32</fragmentFIFOCapacity>
        <fragmentPoolSize xsi:type="xsd:unsignedInt">0x1F400000</fragmentPoolSize>
        <fedSourceIds soapenc:arrayType="xsd:ur-type[16]" xsi:type="soapenc:Array">
          <item soapenc:position="[0]" xsi:type="xsd:unsignedInt">112</item>
          <item soapenc:position="[1]" xsi:type="xsd:unsignedInt">113</item>
          <item soapenc:position="[2]" xsi:type="xsd:unsignedInt">114</item>
          <item soapenc:position="[3]" xsi:type="xsd:unsignedInt">115</item>
          <item soapenc:position="[4]" xsi:type="xsd:unsignedInt">116</item>
          <item soapenc:position="[5]" xsi:type="xsd:unsignedInt">117</item>
          <item soapenc:position="[6]" xsi:type="xsd:unsignedInt">118</item>
          <item soapenc:position="[7]" xsi:type="xsd:unsignedInt">119</item>
          <item soapenc:position="[8]" xsi:type="xsd:unsignedInt">120</item>
          <item soapenc:position="[9]" xsi:type="xsd:unsignedInt">121</item>
          <item soapenc:position="[10]" xsi:type="xsd:unsignedInt">122</item>
          <item soapenc:position="[11]" xsi:type="xsd:unsignedInt">123</item>
          <item soapenc:position="[12]" xsi:type="xsd:unsignedInt">124</item>
          <item soapenc:position="[13]" xsi:type="xsd:unsignedInt">125</item>
          <item soapenc:position="[14]" xsi:type="xsd:unsignedInt">126</item>
          <item soapenc:position="[15]" xsi:type="xsd:unsignedInt">127</item>
        </fedSourceIds>
      </properties>
    </xc:Application>

    <xc:Application class="xmem::probe::Application" id="21" instance="7" network="local"/>

    <xc:Module>/usr/lib64/libdat2.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxmemprobe.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libtcpla.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptudapl.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptutcp.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxdaq2rc.so</xc:Module>
    <xc:Module>$XDAQ_LOCAL/lib/libevb.so</xc:Module>

  </xc:Context>


  <xc:Context url="http://BU0_SOAP_HOST_NAME:BU0_SOAP_PORT">

    <pol:policy xmlns:pol="http://xdaq.web.cern.ch/xdaq/xsd/2013/XDAQPolicy-10">
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_0/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="4" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_1/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="8" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_2/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="10" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_3/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="12" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_4/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="14" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_5/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="16" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_6/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="18" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_7/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="24" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_8/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="26" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_9/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="28" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_10/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="20" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_11/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="22" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/requestFragments/waiting" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="9" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/monitoring/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="30" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/lumiMonitoring/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="30" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-i2o(.+)" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-cno(.+)" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1"  />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-connector(.+)" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-acceptor(.+)" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-receiver/polling" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="2" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-sender/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="7" />
      <pol:element pattern="toolbox-mem-allocator-udapl-sender-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="1" />
      <pol:element pattern="toolbox-mem-allocator-udapl-receiver-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:(.+)FIFO(.+)" type="alloc" package="numa" mempolicy="onnode" node="0" />
    </pol:policy>

    <xc:Endpoint protocol="udapl" service="i2o" hostname="BU0_I2O_HOST_NAME" port="BU0_I2O_PORT" network="infini" />

    <xc:Application class="pt::udapl::Application" id="10" network="infini">
      <properties xmlns="urn:xdaq-application:pt::udapl::Application" xsi:type="soapenc:Struct">
        <senderPoolSize xsi:type="xsd:unsignedInt">0x10000000</senderPoolSize>
        <receiverPoolSize xsi:type="xsd:unsignedInt">0x60000000</receiverPoolSize>
        <iaName xsi:type="xsd:string">ofa-v2-ib0</iaName>
      </properties>
    </xc:Application>

    <xc:Application class="evb::BU" id="12" instance="0" network="infini">
      <properties xmlns="urn:xdaq-application:evb::BU" xsi:type="soapenc:Struct">
        <dropEventData xsi:type="xsd:boolean">false</dropEventData>
        <rawDataDir xsi:type="xsd:string">/ramdisk</rawDataDir>
        <metaDataDir xsi:type="xsd:string">/ramdisk</metaDataDir>
        <deleteRawDataFiles xsi:type="xsd:boolean">false</deleteRawDataFiles>
        <eventsPerRequest xsi:type="xsd:unsignedInt">8</eventsPerRequest>
        <maxEvtsUnderConstruction xsi:type="xsd:unsignedInt">192</maxEvtsUnderConstruction>
        <maxEventsPerFile xsi:type="xsd:unsignedInt">400</maxEventsPerFile>
        <numberOfBuilders xsi:type="xsd:unsignedInt">6</numberOfBuilders>
        <rawDataHighWaterMark xsi:type="xsd:double">0.95</rawDataHighWaterMark>
        <rawDataLowWaterMark xsi:type="xsd:double">0.75</rawDataLowWaterMark>
        <lumiSectionTimeout xsi:type="xsd:unsignedInt">25</lumiSectionTimeout>
        <calculateAdler32 xsi:type="xsd:boolean">true</calculateAdler32>
        <hltParameterSetURL xsi:type="xsd:string">file:///nfshome0/mommsen/tmp</hltParameterSetURL>
      </properties>
    </xc:Application>

    <xc:Application class="xmem::probe::Application" id="21" instance="8" network="local"/>

    <xc:Module>/usr/lib64/libdat2.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxmemprobe.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libtcpla.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptudapl.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptutcp.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxdaq2rc.so</xc:Module>
    <xc:Module>$XDAQ_LOCAL/lib/libevb.so</xc:Module>

  </xc:Context>


  <xc:Context url="http://BU1_SOAP_HOST_NAME:BU1_SOAP_PORT">

    <pol:policy xmlns:pol="http://xdaq.web.cern.ch/xdaq/xsd/2013/XDAQPolicy-10">
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_0/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="4" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_1/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="8" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_2/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="10" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_3/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="12" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_4/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="14" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_5/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="16" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_6/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="18" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_7/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="24" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_8/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="26" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_9/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="28" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_10/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="20" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/Builder_11/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="22" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/requestFragments/waiting" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="9" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/monitoring/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="30" />
      <pol:element pattern="urn:toolbox-task-workloop:evb::(.+)/lumiMonitoring/waiting" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="30" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-i2o(.+)" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-cno(.+)" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1"  />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-connector(.+)" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-acceptor(.+)" type="thread" package="numa" mempolicy="onnode" memnode="0" cpunodes="1" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-receiver/polling" type="thread" package="numa" mempolicy="onnode" memnode="0" affinity="2" />
      <pol:element pattern="urn:toolbox-task-workloop:udapl-sender/polling" type="thread" package="numa" mempolicy="onnode" memnode="1" affinity="7" />
      <pol:element pattern="toolbox-mem-allocator-udapl-sender-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="1" />
      <pol:element pattern="toolbox-mem-allocator-udapl-receiver-ofa-v2-ib0" type="alloc" package="numa" mempolicy="onnode" node="0" />
      <pol:element pattern="urn:(.+)FIFO(.+)" type="alloc" package="numa" mempolicy="onnode" node="0" />
    </pol:policy>

    <xc:Endpoint protocol="udapl" service="i2o" hostname="BU1_I2O_HOST_NAME" port="BU1_I2O_PORT" network="infini" />

    <xc:Application class="pt::udapl::Application" id="10" network="infini">
      <properties xmlns="urn:xdaq-application:pt::udapl::Application" xsi:type="soapenc:Struct">
        <senderPoolSize xsi:type="xsd:unsignedInt">0x10000000</senderPoolSize>
        <receiverPoolSize xsi:type="xsd:unsignedInt">0x60000000</receiverPoolSize>
        <iaName xsi:type="xsd:string">ofa-v2-ib0</iaName>
      </properties>
    </xc:Application>

    <xc:Application class="evb::BU" id="12" instance="1" network="infini">
      <properties xmlns="urn:xdaq-application:evb::BU" xsi:type="soapenc:Struct">
        <dropEventData xsi:type="xsd:boolean">false</dropEventData>
        <rawDataDir xsi:type="xsd:string">/ramdisk</rawDataDir>
        <metaDataDir xsi:type="xsd:string">/ramdisk</metaDataDir>
        <deleteRawDataFiles xsi:type="xsd:boolean">false</deleteRawDataFiles>
        <eventsPerRequest xsi:type="xsd:unsignedInt">8</eventsPerRequest>
        <maxEvtsUnderConstruction xsi:type="xsd:unsignedInt">192</maxEvtsUnderConstruction>
        <maxEventsPerFile xsi:type="xsd:unsignedInt">400</maxEventsPerFile>
        <numberOfBuilders xsi:type="xsd:unsignedInt">6</numberOfBuilders>
        <rawDataHighWaterMark xsi:type="xsd:double">0.95</rawDataHighWaterMark>
        <rawDataLowWaterMark xsi:type="xsd:double">0.75</rawDataLowWaterMark>
        <lumiSectionTimeout xsi:type="xsd:unsignedInt">25</lumiSectionTimeout>
        <calculateAdler32 xsi:type="xsd:boolean">true</calculateAdler32>
        <hltParameterSetURL xsi:type="xsd:string">file:///nfshome0/mommsen/tmp</hltParameterSetURL>
      </properties>
    </xc:Application>

    <xc:Application class="xmem::probe::Application" id="21" instance="9" network="local"/>

    <xc:Module>/usr/lib64/libdat2.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxmemprobe.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libtcpla.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptudapl.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libptutcp.so</xc:Module>
    <xc:Module>$XDAQ_ROOT/lib/libxdaq2rc.so</xc:Module>
    <xc:Module>$XDAQ_LOCAL/lib/libevb.so</xc:Module>

  </xc:Context>

</xc:Partition>
